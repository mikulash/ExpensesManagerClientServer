/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExpenseDto from '../model/ExpenseDto';

/**
 * Expense service.
 * @module api/ExpenseApi
 * @version v1
 */
export default class ExpenseApi {

    /**
     * Constructs a new ExpenseApi.
     * @alias module:api/ExpenseApi
     * @class
     * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
     * default to {@link module:ApiClient#instance} if unspecified.
     */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiExpenseAddOrUpdatePost operation.
     * @callback module:api/ExpenseApi~apiExpenseAddOrUpdatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpenseDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/ExpenseDto} [expenseDto]
     * @param {module:api/ExpenseApi~apiExpenseAddOrUpdatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpenseDto}
     */
    apiExpenseAddOrUpdatePost(opts, callback) {
        opts = opts || {};
        let postBody = opts['expenseDto'];

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = ['application/json', 'text/json', 'application/*+json'];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = ExpenseDto;
        return this.apiClient.callApi(
            '/api/Expense/AddOrUpdate', 'POST',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseDelete operation.
     * @callback module:api/ExpenseApi~apiExpenseDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [expenseId]
     * @param {module:api/ExpenseApi~apiExpenseDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    apiExpenseDelete(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'expenseId': opts['expenseId']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Boolean';
        return this.apiClient.callApi(
            '/api/Expense', 'DELETE',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseGet operation.
     * @callback module:api/ExpenseApi~apiExpenseGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpenseDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [id]
     * @param {module:api/ExpenseApi~apiExpenseGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpenseDto}
     */
    apiExpenseGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'id': opts['id']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = ExpenseDto;
        return this.apiClient.callApi(
            '/api/Expense', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseGetAllGet operation.
     * @callback module:api/ExpenseApi~apiExpenseGetAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ExpenseDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ExpenseApi~apiExpenseGetAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ExpenseDto>}
     */
    apiExpenseGetAllGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = [ExpenseDto];
        return this.apiClient.callApi(
            '/api/Expense/GetAll', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseGetByAmountRangeGet operation.
     * @callback module:api/ExpenseApi~apiExpenseGetByAmountRangeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ExpenseDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [minAmount]
     * @param {Number} [maxAmount]
     * @param {module:api/ExpenseApi~apiExpenseGetByAmountRangeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ExpenseDto>}
     */
    apiExpenseGetByAmountRangeGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'minAmount': opts['minAmount'],
            'maxAmount': opts['maxAmount']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = [ExpenseDto];
        return this.apiClient.callApi(
            '/api/Expense/GetByAmountRange', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseGetByCategoryGet operation.
     * @callback module:api/ExpenseApi~apiExpenseGetByCategoryGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ExpenseDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [categoryId]
     * @param {module:api/ExpenseApi~apiExpenseGetByCategoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ExpenseDto>}
     */
    apiExpenseGetByCategoryGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'categoryId': opts['categoryId']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = [ExpenseDto];
        return this.apiClient.callApi(
            '/api/Expense/GetByCategory', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiExpenseGetByDateRangeGet operation.
     * @callback module:api/ExpenseApi~apiExpenseGetByDateRangeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ExpenseDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Date} [startDate]
     * @param {Date} [endDate]
     * @param {module:api/ExpenseApi~apiExpenseGetByDateRangeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ExpenseDto>}
     */
    apiExpenseGetByDateRangeGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'startDate': opts['startDate'],
            'endDate': opts['endDate']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = [ExpenseDto];
        return this.apiClient.callApi(
            '/api/Expense/GetByDateRange', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }


}
