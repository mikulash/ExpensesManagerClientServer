/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IncomeDto from '../model/IncomeDto';

/**
 * Income service.
 * @module api/IncomeApi
 * @version v1
 */
export default class IncomeApi {

    /**
     * Constructs a new IncomeApi.
     * @alias module:api/IncomeApi
     * @class
     * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
     * default to {@link module:ApiClient#instance} if unspecified.
     */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiIncomeAddOrUpdatePost operation.
     * @callback module:api/IncomeApi~apiIncomeAddOrUpdatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IncomeDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/IncomeDto} [incomeDto]
     * @param {module:api/IncomeApi~apiIncomeAddOrUpdatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IncomeDto}
     */
    apiIncomeAddOrUpdatePost(opts, callback) {
        opts = opts || {};
        let postBody = opts['incomeDto'];

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = ['application/json', 'text/json', 'application/*+json'];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = IncomeDto;
        return this.apiClient.callApi(
            '/api/Income/AddOrUpdate', 'POST',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiIncomeDelete operation.
     * @callback module:api/IncomeApi~apiIncomeDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [incomeId]
     * @param {module:api/IncomeApi~apiIncomeDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    apiIncomeDelete(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'incomeId': opts['incomeId']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Boolean';
        return this.apiClient.callApi(
            '/api/Income', 'DELETE',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiIncomeDeleteAllDelete operation.
     * @callback module:api/IncomeApi~apiIncomeDeleteAllDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/IncomeApi~apiIncomeDeleteAllDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    apiIncomeDeleteAllDelete(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Boolean';
        return this.apiClient.callApi(
            '/api/Income/DeleteAll', 'DELETE',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiIncomeGet operation.
     * @callback module:api/IncomeApi~apiIncomeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IncomeDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [id]
     * @param {module:api/IncomeApi~apiIncomeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IncomeDto}
     */
    apiIncomeGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'id': opts['id']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = IncomeDto;
        return this.apiClient.callApi(
            '/api/Income', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiIncomeGetAllGet operation.
     * @callback module:api/IncomeApi~apiIncomeGetAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/IncomeDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/IncomeApi~apiIncomeGetAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/IncomeDto>}
     */
    apiIncomeGetAllGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = [IncomeDto];
        return this.apiClient.callApi(
            '/api/Income/GetAll', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }


}
