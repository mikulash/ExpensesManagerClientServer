/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MemoryStream from '../model/MemoryStream';
import UserDto from '../model/UserDto';
import UserStatisticsDto from '../model/UserStatisticsDto';
import UserTransactionsDto from '../model/UserTransactionsDto';

/**
 * User service.
 * @module api/UserApi
 * @version v1
 */
export default class UserApi {

    /**
     * Constructs a new UserApi.
     * @alias module:api/UserApi
     * @class
     * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
     * default to {@link module:ApiClient#instance} if unspecified.
     */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiUserBalanceGet operation.
     * @callback module:api/UserApi~apiUserBalanceGetCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserBalanceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    apiUserBalanceGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Number';
        return this.apiClient.callApi(
            '/api/User/Balance', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserDeleteAllDelete operation.
     * @callback module:api/UserApi~apiUserDeleteAllDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserDeleteAllDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    apiUserDeleteAllDelete(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Boolean';
        return this.apiClient.callApi(
            '/api/User/DeleteAll', 'DELETE',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserExportDataGet operation.
     * @callback module:api/UserApi~apiUserExportDataGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserTransactionsDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserExportDataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserTransactionsDto}
     */
    apiUserExportDataGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = UserTransactionsDto;
        return this.apiClient.callApi(
            '/api/User/ExportData', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserFilteredTransactionsGet operation.
     * @callback module:api/UserApi~apiUserFilteredTransactionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserTransactionsDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} [categories]
     * @param {Date} [dateFrom]
     * @param {Date} [dateTo]
     * @param {module:api/UserApi~apiUserFilteredTransactionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserTransactionsDto}
     */
    apiUserFilteredTransactionsGet(opts, callback) {
        opts = opts || {};
        let postBody = null;

        let pathParams = {};
        let queryParams = {
            'categories': this.apiClient.buildCollectionParam(opts['categories'], 'multi'),
            'dateFrom': opts['dateFrom'],
            'dateTo': opts['dateTo']
        };
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = UserTransactionsDto;
        return this.apiClient.callApi(
            '/api/User/FilteredTransactions', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserGet operation.
     * @callback module:api/UserApi~apiUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserDto}
     */
    apiUserGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = UserDto;
        return this.apiClient.callApi(
            '/api/User', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserImportDataPost operation.
     * @callback module:api/UserApi~apiUserImportDataPostCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UserTransactionsDto} [userTransactionsDto]
     * @param {module:api/UserApi~apiUserImportDataPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    apiUserImportDataPost(opts, callback) {
        opts = opts || {};
        let postBody = opts['userTransactionsDto'];

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = ['application/json', 'text/json', 'application/*+json'];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Boolean';
        return this.apiClient.callApi(
            '/api/User/ImportData', 'POST',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserStatisticsGet operation.
     * @callback module:api/UserApi~apiUserStatisticsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserStatisticsDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserStatisticsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserStatisticsDto}
     */
    apiUserStatisticsGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = UserStatisticsDto;
        return this.apiClient.callApi(
            '/api/User/Statistics', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserStatsGraphGet operation.
     * @callback module:api/UserApi~apiUserStatsGraphGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemoryStream} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserStatsGraphGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemoryStream}
     */
    apiUserStatsGraphGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = MemoryStream;
        return this.apiClient.callApi(
            '/api/User/StatsGraph', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserTotalExpenseGet operation.
     * @callback module:api/UserApi~apiUserTotalExpenseGetCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserTotalExpenseGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    apiUserTotalExpenseGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Number';
        return this.apiClient.callApi(
            '/api/User/TotalExpense', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }

    /**
     * Callback function to receive the result of the apiUserTotalIncomeGet operation.
     * @callback module:api/UserApi~apiUserTotalIncomeGetCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/UserApi~apiUserTotalIncomeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    apiUserTotalIncomeGet(callback) {
        let postBody = null;

        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};

        let authNames = ['Bearer'];
        let contentTypes = [];
        let accepts = ['text/plain', 'application/json', 'text/json'];
        let returnType = 'Number';
        return this.apiClient.callApi(
            '/api/User/TotalIncome', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, null, callback
        );
    }


}
