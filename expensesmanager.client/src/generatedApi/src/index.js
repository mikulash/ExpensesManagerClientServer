/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AggregatedTotalDto from './model/AggregatedTotalDto';
import CategoryDto from './model/CategoryDto';
import ExpenseDto from './model/ExpenseDto';
import IncomeDto from './model/IncomeDto';
import LoginDto from './model/LoginDto';
import MemoryStream from './model/MemoryStream';
import RegistrationDto from './model/RegistrationDto';
import RegistrationSuccessDto from './model/RegistrationSuccessDto';
import UserDto from './model/UserDto';
import UserStatisticsDto from './model/UserStatisticsDto';
import UserTransactionsDto from './model/UserTransactionsDto';
import AuthApi from './api/AuthApi';
import CategoryApi from './api/CategoryApi';
import ExpenseApi from './api/ExpenseApi';
import IncomeApi from './api/IncomeApi';
import UserApi from './api/UserApi';


/**
 * JS API client generated by OpenAPI Generator.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var ExpensesManagerApi = require('index'); // See note below*.
 * var xxxSvc = new ExpensesManagerApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new ExpensesManagerApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new ExpensesManagerApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new ExpensesManagerApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version v1
 */
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
        ApiClient,

    /**
     * The AggregatedTotalDto model constructor.
     * @property {module:model/AggregatedTotalDto}
     */
        AggregatedTotalDto,

    /**
     * The CategoryDto model constructor.
     * @property {module:model/CategoryDto}
     */
        CategoryDto,

    /**
     * The ExpenseDto model constructor.
     * @property {module:model/ExpenseDto}
     */
        ExpenseDto,

    /**
     * The IncomeDto model constructor.
     * @property {module:model/IncomeDto}
     */
        IncomeDto,

    /**
     * The LoginDto model constructor.
     * @property {module:model/LoginDto}
     */
        LoginDto,

    /**
     * The MemoryStream model constructor.
     * @property {module:model/MemoryStream}
     */
        MemoryStream,

    /**
     * The RegistrationDto model constructor.
     * @property {module:model/RegistrationDto}
     */
        RegistrationDto,

    /**
     * The RegistrationSuccessDto model constructor.
     * @property {module:model/RegistrationSuccessDto}
     */
        RegistrationSuccessDto,

    /**
     * The UserDto model constructor.
     * @property {module:model/UserDto}
     */
        UserDto,

    /**
     * The UserStatisticsDto model constructor.
     * @property {module:model/UserStatisticsDto}
     */
        UserStatisticsDto,

    /**
     * The UserTransactionsDto model constructor.
     * @property {module:model/UserTransactionsDto}
     */
        UserTransactionsDto,

    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
        AuthApi,

    /**
     * The CategoryApi service constructor.
     * @property {module:api/CategoryApi}
     */
        CategoryApi,

    /**
     * The ExpenseApi service constructor.
     * @property {module:api/ExpenseApi}
     */
        ExpenseApi,

    /**
     * The IncomeApi service constructor.
     * @property {module:api/IncomeApi}
     */
        IncomeApi,

    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
        UserApi
};
