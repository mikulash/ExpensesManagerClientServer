/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MemoryStream model module.
 * @module model/MemoryStream
 * @version v1
 */
class MemoryStream {
    /**
     * Constructs a new <code>MemoryStream</code>.
     * @alias module:model/MemoryStream
     */
    constructor() {

        MemoryStream.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) {
    }

    /**
     * Constructs a <code>MemoryStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemoryStream} obj Optional instance to populate.
     * @return {module:model/MemoryStream} The populated <code>MemoryStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemoryStream();

            if (data.hasOwnProperty('canTimeout')) {
                obj['canTimeout'] = ApiClient.convertToType(data['canTimeout'], 'Boolean');
            }
            if (data.hasOwnProperty('readTimeout')) {
                obj['readTimeout'] = ApiClient.convertToType(data['readTimeout'], 'Number');
            }
            if (data.hasOwnProperty('writeTimeout')) {
                obj['writeTimeout'] = ApiClient.convertToType(data['writeTimeout'], 'Number');
            }
            if (data.hasOwnProperty('canRead')) {
                obj['canRead'] = ApiClient.convertToType(data['canRead'], 'Boolean');
            }
            if (data.hasOwnProperty('canSeek')) {
                obj['canSeek'] = ApiClient.convertToType(data['canSeek'], 'Boolean');
            }
            if (data.hasOwnProperty('canWrite')) {
                obj['canWrite'] = ApiClient.convertToType(data['canWrite'], 'Boolean');
            }
            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemoryStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemoryStream</code>.
     */
    static validateJSON(data) {

        return true;
    }


}


/**
 * @member {Boolean} canTimeout
 */
MemoryStream.prototype['canTimeout'] = undefined;

/**
 * @member {Number} readTimeout
 */
MemoryStream.prototype['readTimeout'] = undefined;

/**
 * @member {Number} writeTimeout
 */
MemoryStream.prototype['writeTimeout'] = undefined;

/**
 * @member {Boolean} canRead
 */
MemoryStream.prototype['canRead'] = undefined;

/**
 * @member {Boolean} canSeek
 */
MemoryStream.prototype['canSeek'] = undefined;

/**
 * @member {Boolean} canWrite
 */
MemoryStream.prototype['canWrite'] = undefined;

/**
 * @member {Number} capacity
 */
MemoryStream.prototype['capacity'] = undefined;

/**
 * @member {Number} length
 */
MemoryStream.prototype['length'] = undefined;

/**
 * @member {Number} position
 */
MemoryStream.prototype['position'] = undefined;


export default MemoryStream;

