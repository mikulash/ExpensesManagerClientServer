/**
 * ExpensesManager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpenseDto from './ExpenseDto';
import IncomeDto from './IncomeDto';

/**
 * The UserTransactionsDto model module.
 * @module model/UserTransactionsDto
 * @version v1
 */
class UserTransactionsDto {
    /**
     * Constructs a new <code>UserTransactionsDto</code>.
     * @alias module:model/UserTransactionsDto
     */
    constructor() {

        UserTransactionsDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) {
    }

    /**
     * Constructs a <code>UserTransactionsDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTransactionsDto} obj Optional instance to populate.
     * @return {module:model/UserTransactionsDto} The populated <code>UserTransactionsDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTransactionsDto();

            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('incomes')) {
                obj['incomes'] = ApiClient.convertToType(data['incomes'], [IncomeDto]);
            }
            if (data.hasOwnProperty('expenses')) {
                obj['expenses'] = ApiClient.convertToType(data['expenses'], [ExpenseDto]);
            }
            if (data.hasOwnProperty('totalIncome')) {
                obj['totalIncome'] = ApiClient.convertToType(data['totalIncome'], 'Number');
            }
            if (data.hasOwnProperty('totalExpense')) {
                obj['totalExpense'] = ApiClient.convertToType(data['totalExpense'], 'Number');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTransactionsDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTransactionsDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        if (data['incomes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['incomes'])) {
                throw new Error("Expected the field `incomes` to be an array in the JSON data but got " + data['incomes']);
            }
            // validate the optional field `incomes` (array)
            for (const item of data['incomes']) {
                IncomeDto.validateJSON(item);
            }
        }
        if (data['expenses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['expenses'])) {
                throw new Error("Expected the field `expenses` to be an array in the JSON data but got " + data['expenses']);
            }
            // validate the optional field `expenses` (array)
            for (const item of data['expenses']) {
                ExpenseDto.validateJSON(item);
            }
        }

        return true;
    }


}


/**
 * @member {String} userId
 */
UserTransactionsDto.prototype['userId'] = undefined;

/**
 * @member {Array.<module:model/IncomeDto>} incomes
 */
UserTransactionsDto.prototype['incomes'] = undefined;

/**
 * @member {Array.<module:model/ExpenseDto>} expenses
 */
UserTransactionsDto.prototype['expenses'] = undefined;

/**
 * @member {Number} totalIncome
 */
UserTransactionsDto.prototype['totalIncome'] = undefined;

/**
 * @member {Number} totalExpense
 */
UserTransactionsDto.prototype['totalExpense'] = undefined;

/**
 * @member {Number} balance
 */
UserTransactionsDto.prototype['balance'] = undefined;


export default UserTransactionsDto;

